#include<stdio.h>
#include<stdlib.h>
#include<string.h>

void maxHeapify(int* arr,int p,int n)
{
    int largest=p;
    int l=2*p+1;
    int r=2*p+2;
    int temp=0;
    if((arr[l]>arr[p])&&(l<n))
       p=l;
    if((arr[r]>arr[p])&&(r<n))
       p=r;
    if(p!=largest)
    {
        temp=arr[p];
        arr[p]=arr[largest];
        arr[largest]=temp;
        if(p<=(n/2-1))
            maxHeapify(arr,p,n);
    }
}

void maxHeap(int* arr,int n)
{
    int i=n/2-1;
    while(i>=0)
    {
        maxHeapify(arr,i,n);
        i--;
    }
}

void heapSort(int* arr,int n)
{
    int i,temp;
    maxHeap(arr,n);
    for(i=n-1;i>0;i--)
    {
        temp=arr[0];
        arr[0]=arr[i];
        arr[i]=temp;
        maxHeapify(arr,0,i);
    }
}

int main()
{
    int n;
    printf("\nEnter the size of the array\n");
    scanf("%d",&n);
    int* arr=(int*)malloc(n*sizeof(int));
    printf("\nEnter the elements of the array\n");
    int i=0;
    while(i<n)
    {
        scanf("%d",arr+i);
        i++;
    }
    heapSort(arr,n);
    printf("\nThe array after sorting is\n");
    for(i=0;i<n;i++)
        printf("%d  ",arr[i]);
}



