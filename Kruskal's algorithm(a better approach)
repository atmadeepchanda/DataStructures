#include <iostream>
#include <bits/stdc++.h>
using namespace std;



class Edge{
    public:
        int src;
        int dest;
        int weight;
};

void setParent(int i,int key,int* parent){
    if(i==parent[i]){
        parent[i]=key;
        return;
    }
    
    setParent(parent[i],key,parent);
}

int findParent(int i,int* parent){
    if(i==parent[i]){
        return i;
    }
    
    return findParent(parent[i],parent);
}

bool compareSrc(Edge e1,Edge e2){
    return (e1.weight<e2.weight);
}


int main()
{
  int V, E, tempX, tempY;
  cin >> V >> E;

  /*

  	   Write Your Code Here
	   Complete the Rest of the Program
	   You have to Print the output yourself
	 
  */
    Edge* arr=new Edge[E];
    int count=0;
    for(int i=0;i<E;i++){
        cin>>arr[i].src>>arr[i].dest>>arr[i].weight;
    }
    
    sort(arr,arr+E,compareSrc);
    int* parent=new int[V];
    for(int i=0;i<V;i++){
        parent[i]=i;
    }
    
    while(count<V-1){
        for(int i=0;i<E;i++){
            int left=findParent(arr[i].src,parent);
            int right=findParent(arr[i].dest,parent);
            if(left!=right){
                setParent(arr[i].dest,left,parent);
                count++;
                int p=min(arr[i].src,arr[i].dest);
                int q=max(arr[i].src,arr[i].dest);
                cout<<p<<" "<<q<<" "<<arr[i].weight<<endl;
            }
        }
    }
    
    
    
    
    

  return 0;
}
